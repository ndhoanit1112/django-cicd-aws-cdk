region: us-east-2
vpc:
  stackId: DjangoDeployVpcStack
  constructId: DjangoDeployVpc
  name: django-deploy-vpc
  cidr: 10.0.0.0/16
  securityGroup:
    public:
      constructId: PublicSecurityGroup
      name: django-deploy-public-sg
    private:
      constructId: PrivateSecurityGroup
      name: django-deploy-private-sg
    bastion:
      constructId: BastionSecurityGroup
      name: django-deploy-bastion-sg
    isolated:
      constructId: IsolatedSecurityGroup
      name: django-deploy-isolated-sg
rds:
  stackId: DjangoDeployRdsStack
  db:
    constructId: DjangoDeployRds
    dbName: db_django_deploy
    masterUsername: root
    backupRetention: 7
    backupPreferredWindow: "18:00-20:00"
    parameterGroupConstructId: DjangoDeployRdsParameterGroup
  bastion:
    constructId: DjangoDeployBastionHost
    hostName: django-deploy-bastion-ec2
    keyName: django-deploy-bastion-key
ecr:
  stackId: DjangoDeployEcr
  webapp:
    constructId: WebappEcrRepo
    name: django-deploy-webapp-repo
  nginx:
    constructId: NginxEcrRepo
    name: django-deploy-nginx-repo
  celery:
    constructId: CeleryEcrRepo
    name: django-deploy-celery-repo
elb:
  stackId: DjangoDeployElbStack
  lb:
    constructId: DjangoDeployElb
    name: django-deploy-elb
  listener:
    constructId: DjangoDeployElbListener
  targetGroup:
    constructId: DjangoDeployTg
    name: django-deploy-tg
    healthCheckPath: /polls/healthcheck/
ecs:
  stackId: DjangoDeployEcsStack
  cluster:
    constructId: DjangoDeployCluster
    name: django-deploy-cluster
  service:
    web:
      constructId: WebService
      name: django-deploy-web-service
      desiredCount: 0
    celery:
      constructId: CeleryService
      name: django-deploy-celery-service
      desiredCount: 0
  taskDef:
    web:
      constructId: WebTaskDefinition
      name: django-deploy-web-td
      storage:
        volumeName: gunicorn
        mountPointPath:
          web: /var/run/gunicorn
          nginx: /var/run/gunicorn
    celery:
      constructId: CeleryTaskDefinition
      name: django-deploy-celery-td
  container:
    web:
      id: WebContainer
      name: django-deploy-web-container
    nginx:
      id: NginxContainer
      name: django-deploy-nginx-container
      portMappingName: nginx-80-tcp
    celery:
      id: CeleryContainer
      name: django-deploy-celery-container
      entryPoint: /bin/sh,-c
      command: celery -A app worker -l INFO -Q dfqueue
      workingDir: /app